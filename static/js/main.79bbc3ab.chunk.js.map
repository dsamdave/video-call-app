{"version":3,"sources":["components/MeetingFooter/MeetingFooter.js","components/Shared/Card/Card.js","components/Participants/Participant/Participant.js","components/Participants/Participants.js","store/actiontypes.js","store/actioncreator.js","components/MainScreen/MainScreen.js","config/firebase.js","components/MessageRoom/Demo.js","App.js","config/peerConnection.js","store/reducer.js","index.js"],"names":["MeetingFooter","props","useState","mic","video","screen","streamState","setStreamState","setScreenState","isEnabled","currentState","useEffect","onMicClick","onVideoClick","className","onClick","icon","faMicrophone","faMicrophoneSlash","title","faVideo","faVideoSlash","onScreenClick","disabled","faDesktop","current","srcObject","getTracks","forEach","track","stop","e","window","location","href","faPhoneSlash","Card","children","Participant","curentIndex","currentParticipant","hideVideo","videoRef","showAvatar","currentUser","ref","id","autoPlay","playsInline","audio","style","background","avatarColor","name","connect","state","participants","stream","mainStream","useRef","participantKey","Object","keys","muted","values","gridCol","length","gridColSize","gridRowSize","Math","ceil","screenPresenter","find","element","map","index","pc","peerConnection","remoteStream","MediaStream","ontrack","event","streams","addTrack","videElement","document","getElementById","SET_MAIN_STREAM","ADD_PARTICIPANT","REMOVE_PARTICIPANT","SET_USER","UPDATE_USER","UPDATE_PARTICIPANT","setMainStream","type","payload","dispatch","updateUser","user","participantRef","updateStream","key","sender","getSenders","s","kind","replaceTrack","getVideoTracks","onScreenShareEnd","navigator","mediaDevices","getUserMedia","localStream","enabled","getDisplayMedia","mediaStream","mediaSource","onended","micEnabled","getAudioTracks","videoEnabled","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","databaseURL","db","firepadRef","database","userName","prompt","roomId","URLSearchParams","search","get","child","push","history","replaceState","Demo","messageList","message","this","setState","text","author","data","agentProfile","teamName","imageUrl","onMessageWasSent","_onMessageWasSent","bind","showEmoji","Component","addParticipant","newUser","setUser","removeParticipant","userId","updateParticipant","getUserStream","connectedRef","on","snap","val","defaultPreference","userStatusRef","preferences","onDisconnect","remove","isUserSet","isStreamSet","preferenceSnap","updatePreference","preference","currentParticipantRef","setTimeout","update","createOffer","receiverId","createdID","onicecandidate","candidate","toJSON","offerDescription","setLocalDescription","offer","sdp","set","initializeListensers","currentUserRef","snapshot","store","getState","setRemoteDescription","RTCSessionDescription","createAnswer","addIceCandidate","RTCIceCandidate","answer","answerDescription","otherUserId","participantRef1","defaultUserState","servers","iceServers","urls","iceCandidatePoolSize","generateColor","floor","random","toString","addConnection","RTCPeerConnection","newUserId","currentUserId","offerIds","sort","a","b","localeCompare","createStore","action","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.79bbc3ab.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faMicrophone,\r\n  faVideo,\r\n  faDesktop,\r\n  faVideoSlash,\r\n  faMicrophoneSlash,\r\n  faPhoneSlash,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport \"./MeetingFooter.css\";\r\nconst MeetingFooter = (props) => {\r\n  const [streamState, setStreamState] = useState({\r\n    mic: true,\r\n    video: false,\r\n    screen: false,\r\n  });\r\n  const micClick = () => {\r\n    setStreamState((currentState) => {\r\n      return {\r\n        ...currentState,\r\n        mic: !currentState.mic,\r\n      };\r\n    });\r\n  };\r\n  \r\n  const endCallClick = () => {\r\n    try {\r\n\t\t\tlet tracks = this.setStreamState.current.srcObject.getTracks()\r\n\t\t\ttracks.forEach(track => track.stop())\r\n\t\t} catch (e) {}\r\n\t\twindow.location.href = \"/\"\r\n  };\r\n\r\n  const onVideoClick = () => {\r\n    setStreamState((currentState) => {\r\n      return {\r\n        ...currentState,\r\n        video: !currentState.video,\r\n      };\r\n    });\r\n  };\r\n\r\n  const onScreenClick = () => {\r\n    props.onScreenClick(setScreenState);\r\n  };\r\n\r\n  const setScreenState = (isEnabled) => {\r\n    setStreamState((currentState) => {\r\n      return {\r\n        ...currentState,\r\n        screen: isEnabled,\r\n      };\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    props.onMicClick(streamState.mic);\r\n  }, [streamState.mic]);\r\n  useEffect(() => {\r\n    props.onVideoClick(streamState.video);\r\n  }, [streamState.video]);\r\n  return (\r\n    <div className=\"meeting-footer\">\r\n      <div\r\n        className={\"meeting-icons \" + (!streamState.mic ? \"active\" : \"\")}\r\n        data-tip={streamState.mic ? \"Mute Audio\" : \"Unmute Audio\"}\r\n        onClick={micClick}\r\n      >\r\n        <FontAwesomeIcon\r\n          icon={!streamState.mic ? faMicrophoneSlash : faMicrophone}\r\n          title=\"Mute\"\r\n        />\r\n      </div>\r\n      <div\r\n        className={\"meeting-icons \" + (!streamState.video ? \"active\" : \"\")}\r\n        data-tip={streamState.video ? \"Hide Video\" : \"Show Video\"}\r\n        onClick={onVideoClick}\r\n      >\r\n        <FontAwesomeIcon icon={!streamState.video ? faVideoSlash : faVideo} />\r\n      </div>\r\n      <div\r\n        className=\"meeting-icons\"\r\n        data-tip=\"Share Screen\"\r\n        onClick={onScreenClick}\r\n        disabled={streamState.screen}\r\n      >\r\n        <FontAwesomeIcon icon={faDesktop} />\r\n      </div>\r\n      <div\r\n        className=\"meeting-icons\"\r\n        data-tip=\"End Call\"\r\n        onClick={endCallClick}\r\n      >\r\n        <FontAwesomeIcon icon={faPhoneSlash} />\r\n      </div>\r\n      <ReactTooltip />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MeetingFooter;\r\n","import React from \"react\";\r\nimport \"./Card.css\";\r\n\r\nconst Card = (props) => {\r\n  return <div className=\"card\">{props.children}</div>;\r\n};\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport Card from \"../../Shared/Card/Card\";\r\nimport { faMicrophoneSlash } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport \"./Participant.css\";\r\n\r\nexport const Participant = (props) => {\r\n  const {\r\n    curentIndex,\r\n    currentParticipant,\r\n    hideVideo,\r\n    videoRef,\r\n    showAvatar,\r\n    currentUser,\r\n  } = props;\r\n  if (!currentParticipant) return <></>;\r\n  return (\r\n    <div className={`participant ${hideVideo ? \"hide\" : \"\"}`}>\r\n      <Card>\r\n        <video\r\n          ref={videoRef}\r\n          className=\"video\"\r\n          id={`participantVideo${curentIndex}`}\r\n          autoPlay\r\n          playsInline\r\n        ></video>\r\n        {!currentParticipant.audio && (\r\n          <FontAwesomeIcon\r\n            className=\"muted\"\r\n            icon={faMicrophoneSlash}\r\n            title=\"Muted\"\r\n          />\r\n        )}\r\n        {showAvatar && (\r\n          <div\r\n            style={{ background: currentParticipant.avatarColor }}\r\n            className=\"avatar\"\r\n          >\r\n            {currentParticipant.name[0]}\r\n          </div>\r\n        )}\r\n        <div className=\"name\">\r\n          {currentParticipant.name}\r\n          {currentUser ? \"(You)\" : \"\"}\r\n        </div>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport \"./Participants.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { Participant } from \"./Participant/Participant\";\r\n\r\nconst Participants = (props) => {\r\n  const videoRef = useRef(null);\r\n  let participantKey = Object.keys(props.participants);\r\n  useEffect(() => {\r\n    if (videoRef.current) {\r\n      videoRef.current.srcObject = props.stream;\r\n      videoRef.current.muted = true;\r\n    }\r\n  }, [props.currentUser, props.stream]);\r\n\r\n  const currentUser = props.currentUser\r\n    ? Object.values(props.currentUser)[0]\r\n    : null;\r\n\r\n  let gridCol =\r\n    participantKey.length === 1 ? 1 : participantKey.length <= 4 ? 2 : 4;\r\n  const gridColSize = participantKey.length <= 4 ? 1 : 2;\r\n  let gridRowSize =\r\n    participantKey.length <= 4\r\n      ? participantKey.length\r\n      : Math.ceil(participantKey.length / 2);\r\n\r\n  const screenPresenter = participantKey.find((element) => {\r\n    const currentParticipant = props.participants[element];\r\n    return currentParticipant.screen;\r\n  });\r\n\r\n  if (screenPresenter) {\r\n    gridCol = 1;\r\n    gridRowSize = 2;\r\n  }\r\n  const participants = participantKey.map((element, index) => {\r\n    const currentParticipant = props.participants[element];\r\n    const isCurrentUser = currentParticipant.currentUser;\r\n    if (isCurrentUser) {\r\n      return null;\r\n    }\r\n    const pc = currentParticipant.peerConnection;\r\n    const remoteStream = new MediaStream();\r\n    let curentIndex = index;\r\n    if (pc) {\r\n      pc.ontrack = (event) => {\r\n        event.streams[0].getTracks().forEach((track) => {\r\n          remoteStream.addTrack(track);\r\n        });\r\n        const videElement = document.getElementById(\r\n          `participantVideo${curentIndex}`\r\n        );\r\n        if (videElement) videElement.srcObject = remoteStream;\r\n      };\r\n    }\r\n\r\n    return (\r\n      <Participant\r\n        key={curentIndex}\r\n        currentParticipant={currentParticipant}\r\n        curentIndex={curentIndex}\r\n        hideVideo={screenPresenter && screenPresenter !== element}\r\n        showAvatar={\r\n          !currentParticipant.video &&\r\n          !currentParticipant.screen &&\r\n          currentParticipant.name\r\n        }\r\n      />\r\n    );\r\n  });\r\n  return (\r\n    <div\r\n      style={{\r\n        \"--grid-size\": gridCol,\r\n        \"--grid-col-size\": gridColSize,\r\n        \"--grid-row-size\": gridRowSize,\r\n      }}\r\n      className={`participants`}\r\n    >\r\n      {participants}\r\n      <Participant\r\n        currentParticipant={currentUser}\r\n        curentIndex={participantKey.length}\r\n        hideVideo={screenPresenter && !currentUser.screen}\r\n        videoRef={videoRef}\r\n        showAvatar={currentUser && !currentUser.video && !currentUser.screen}\r\n        currentUser={true}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    participants: state.participants,\r\n    currentUser: state.currentUser,\r\n    stream: state.mainStream,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Participants);\r\n","export const SET_MAIN_STREAM = \"SET_MAIN_STREAM\";\r\nexport const ADD_PARTICIPANT = \"ADD_PARTICIPANT\";\r\nexport const REMOVE_PARTICIPANT = \"REMOVE_PARTICIPANT\";\r\nexport const SET_USER = \"SET_USER\";\r\nexport const UPDATE_USER = \"UPDATE_USER\";\r\nexport const UPDATE_PARTICIPANT = \"UPDATE_PARTICIPANT\";\r\n","import {\r\n  SET_MAIN_STREAM,\r\n  ADD_PARTICIPANT,\r\n  SET_USER,\r\n  REMOVE_PARTICIPANT,\r\n  UPDATE_USER,\r\n  UPDATE_PARTICIPANT,\r\n} from \"./actiontypes\";\r\n\r\nexport const setMainStream = (stream) => {\r\n  return {\r\n    type: SET_MAIN_STREAM,\r\n    payload: {\r\n      mainStream: stream,\r\n    },\r\n  };\r\n};\r\n\r\nexport const setUser = (user) => {\r\n  return {\r\n    type: SET_USER,\r\n    payload: {\r\n      currentUser: user,\r\n    },\r\n  };\r\n};\r\n\r\nexport const addParticipant = (user) => {\r\n  return {\r\n    type: ADD_PARTICIPANT,\r\n    payload: {\r\n      newUser: user,\r\n    },\r\n  };\r\n};\r\n\r\nexport const updateUser = (user) => {\r\n  return {\r\n    type: UPDATE_USER,\r\n    payload: {\r\n      currentUser: user,\r\n    },\r\n  };\r\n};\r\n\r\nexport const updateParticipant = (user) => {\r\n  return {\r\n    type: UPDATE_PARTICIPANT,\r\n    payload: {\r\n      newUser: user,\r\n    },\r\n  };\r\n};\r\n\r\nexport const removeParticipant = (userId) => {\r\n  return {\r\n    type: REMOVE_PARTICIPANT,\r\n    payload: {\r\n      id: userId,\r\n    },\r\n  };\r\n};\r\n","import React, { useRef, useEffect } from \"react\";\r\nimport MeetingFooter from \"../MeetingFooter/MeetingFooter\";\r\nimport Participants from \"../Participants/Participants\";\r\nimport \"./MainScreen.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { setMainStream, updateUser } from \"../../store/actioncreator\";\r\n\r\nconst MainScreen = (props) => {\r\n  const participantRef = useRef(props.participants);\r\n\r\n  const onMicClick = (micEnabled) => {\r\n    if (props.stream) {\r\n      props.stream.getAudioTracks()[0].enabled = micEnabled;\r\n      props.updateUser({ audio: micEnabled });\r\n    }\r\n  };\r\n  const onVideoClick = (videoEnabled) => {\r\n    if (props.stream) {\r\n      props.stream.getVideoTracks()[0].enabled = videoEnabled;\r\n      props.updateUser({ video: videoEnabled });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    participantRef.current = props.participants;\r\n  }, [props.participants]);\r\n\r\n  const updateStream = (stream) => {\r\n    for (let key in participantRef.current) {\r\n      const sender = participantRef.current[key];\r\n      if (sender.currentUser) continue;\r\n      const peerConnection = sender.peerConnection\r\n        .getSenders()\r\n        .find((s) => (s.track ? s.track.kind === \"video\" : false));\r\n      peerConnection.replaceTrack(stream.getVideoTracks()[0]);\r\n    }\r\n    props.setMainStream(stream);\r\n  };\r\n\r\n  const onScreenShareEnd = async () => {\r\n    const localStream = await navigator.mediaDevices.getUserMedia({\r\n      audio: true,\r\n      video: true,\r\n    });\r\n\r\n    localStream.getVideoTracks()[0].enabled = Object.values(\r\n      props.currentUser\r\n    )[0].video;\r\n\r\n    updateStream(localStream);\r\n\r\n    props.updateUser({ screen: false });\r\n  };\r\n\r\n  const onScreenClick = async () => {\r\n    let mediaStream;\r\n    if (navigator.getDisplayMedia) {\r\n      mediaStream = await navigator.getDisplayMedia({ video: true });\r\n    } else if (navigator.mediaDevices.getDisplayMedia) {\r\n      mediaStream = await navigator.mediaDevices.getDisplayMedia({\r\n        video: true,\r\n      });\r\n    } else {\r\n      mediaStream = await navigator.mediaDevices.getUserMedia({\r\n        video: { mediaSource: \"screen\" },\r\n      });\r\n    }\r\n\r\n    mediaStream.getVideoTracks()[0].onended = onScreenShareEnd;\r\n\r\n    updateStream(mediaStream);\r\n\r\n    props.updateUser({ screen: true });\r\n  };\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <div className=\"main-screen\">\r\n        <Participants />\r\n      </div>\r\n\r\n      <div className=\"footer\">\r\n        <MeetingFooter\r\n          onScreenClick={onScreenClick}\r\n          onMicClick={onMicClick}\r\n          onVideoClick={onVideoClick}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    stream: state.mainStream,\r\n    participants: state.participants,\r\n    currentUser: state.currentUser,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setMainStream: (stream) => dispatch(setMainStream(stream)),\r\n    updateUser: (user) => dispatch(updateUser(user)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MainScreen);\r\n","import firebase from \"firebase\";\r\n\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyAdMM5ofwGroMO1KYjdvlN2a0c2NQHOQIg\",\r\n  authDomain: \"prepone-bills.firebaseapp.com\",\r\n  projectId: \"prepone-bills\",\r\n  storageBucket: \"prepone-bills.appspot.com\",\r\n  messagingSenderId: \"611583318664\",\r\n  appId: \"1:611583318664:web:b449dde30d5912cea51d3d\",\r\n  measurementId: \"G-N0K4BGQ0QW\",\r\n  databaseURL: \"https://prepone-bills-default-rtdb.firebaseio.com\"\r\n\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const db = firebase;\r\n\r\nvar firepadRef = firebase.database().ref();\r\n\r\nexport const userName = prompt(\"What's your name?\");\r\nconst urlparams = new URLSearchParams(window.location.search);\r\nconst roomId = urlparams.get(\"id\");\r\n\r\nif (roomId) {\r\n  firepadRef = firepadRef.child(roomId);\r\n} else {\r\n  firepadRef = firepadRef.push();\r\n  window.history.replaceState(null, \"Meet\", \"?id=\" + firepadRef.key);\r\n}\r\n\r\nexport default firepadRef;\r\n","import {Launcher} from 'react-chat-window';\r\nimport React, {Component} from 'react';\r\n\r\nclass Demo extends Component {\r\n \r\n    constructor() {\r\n      super();\r\n      this.state = {\r\n        messageList: []\r\n      };\r\n    }\r\n   \r\n    _onMessageWasSent(message) {\r\n      this.setState({\r\n        messageList: [...this.state.messageList, message]\r\n      })\r\n    }\r\n   \r\n    _sendMessage(text) {\r\n      if (text.length > 0) {\r\n        this.setState({\r\n          messageList: [...this.state.messageList, {\r\n            author: 'them',\r\n            type: 'text',\r\n            data: { text }\r\n          }]\r\n        })\r\n      }\r\n    }\r\n   \r\n    render() {\r\n      return (<div>\r\n        <Launcher\r\n          agentProfile={{\r\n            teamName: 'react-chat-window',\r\n            imageUrl: 'https://a.slack-edge.com/66f9/img/avatars-teams/ava_0001-34.png'\r\n          }}\r\n          onMessageWasSent={this._onMessageWasSent.bind(this)}\r\n          messageList={this.state.messageList}\r\n          showEmoji\r\n        />\r\n      </div>)\r\n    }\r\n  }\r\n  \r\n  export default Demo;","import MainScreen from \"./components/MainScreen/MainScreen\";\r\nimport firepadRef, { db, userName } from \"./config/firebase\";\r\nimport \"./App.css\";\r\nimport { useEffect } from \"react\";\r\nimport {\r\n  setMainStream,\r\n  addParticipant,\r\n  setUser,\r\n  removeParticipant,\r\n  updateParticipant,\r\n} from \"./store/actioncreator\";\r\nimport { connect } from \"react-redux\";\r\nimport Demo from \"./components/MessageRoom/Demo\";\r\n\r\nfunction App(props) {\r\n  const getUserStream = async () => {\r\n    const localStream = await navigator.mediaDevices.getUserMedia({\r\n      audio: true,\r\n      video: true,\r\n    });\r\n\r\n    return localStream;\r\n  };\r\n  useEffect(async () => {\r\n    const stream = await getUserStream();\r\n    stream.getVideoTracks()[0].enabled = false;\r\n    props.setMainStream(stream);\r\n\r\n    connectedRef.on(\"value\", (snap) => {\r\n      if (snap.val()) {\r\n        const defaultPreference = {\r\n          audio: true,\r\n          video: false,\r\n          screen: false,\r\n        };\r\n        const userStatusRef = participantRef.push({\r\n          userName,\r\n          preferences: defaultPreference,\r\n        });\r\n        props.setUser({\r\n          [userStatusRef.key]: { name: userName, ...defaultPreference },\r\n        });\r\n        userStatusRef.onDisconnect().remove();\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  const connectedRef = db.database().ref(\".info/connected\");\r\n  const participantRef = firepadRef.child(\"participants\");\r\n\r\n  const isUserSet = !!props.user;\r\n  const isStreamSet = !!props.stream;\r\n\r\n  useEffect(() => {\r\n    if (isStreamSet && isUserSet) {\r\n      participantRef.on(\"child_added\", (snap) => {\r\n        const preferenceUpdateEvent = participantRef\r\n          .child(snap.key)\r\n          .child(\"preferences\");\r\n        preferenceUpdateEvent.on(\"child_changed\", (preferenceSnap) => {\r\n          props.updateParticipant({\r\n            [snap.key]: {\r\n              [preferenceSnap.key]: preferenceSnap.val(),\r\n            },\r\n          });\r\n        });\r\n        const { userName: name, preferences = {} } = snap.val();\r\n        props.addParticipant({\r\n          [snap.key]: {\r\n            name,\r\n            ...preferences,\r\n          },\r\n        });\r\n      });\r\n      participantRef.on(\"child_removed\", (snap) => {\r\n        props.removeParticipant(snap.key);\r\n      });\r\n    }\r\n  }, [isStreamSet, isUserSet]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <MainScreen />\r\n      <Demo />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    stream: state.mainStream,\r\n    user: state.currentUser,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setMainStream: (stream) => dispatch(setMainStream(stream)),\r\n    addParticipant: (user) => dispatch(addParticipant(user)),\r\n    setUser: (user) => dispatch(setUser(user)),\r\n    removeParticipant: (userId) => dispatch(removeParticipant(userId)),\r\n    updateParticipant: (user) => dispatch(updateParticipant(user)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","import firepadRef from \"./firebase\";\r\nimport { store } from \"../index\";\r\n\r\nconst participantRef = firepadRef.child(\"participants\");\r\n\r\nexport const updatePreference = (userId, preference) => {\r\n  const currentParticipantRef = participantRef\r\n    .child(userId)\r\n    .child(\"preferences\");\r\n  setTimeout(() => {\r\n    currentParticipantRef.update(preference);\r\n  });\r\n};\r\n\r\nexport const createOffer = async (peerConnection, receiverId, createdID) => {\r\n  const currentParticipantRef = participantRef.child(receiverId);\r\n  peerConnection.onicecandidate = (event) => {\r\n    event.candidate &&\r\n      currentParticipantRef\r\n        .child(\"offerCandidates\")\r\n        .push({ ...event.candidate.toJSON(), userId: createdID });\r\n  };\r\n\r\n  const offerDescription = await peerConnection.createOffer();\r\n  await peerConnection.setLocalDescription(offerDescription);\r\n\r\n  const offer = {\r\n    sdp: offerDescription.sdp,\r\n    type: offerDescription.type,\r\n    userId: createdID,\r\n  };\r\n\r\n  await currentParticipantRef.child(\"offers\").push().set({ offer });\r\n};\r\n\r\nexport const initializeListensers = async (userId) => {\r\n  const currentUserRef = participantRef.child(userId);\r\n\r\n  currentUserRef.child(\"offers\").on(\"child_added\", async (snapshot) => {\r\n    const data = snapshot.val();\r\n    if (data?.offer) {\r\n      const pc =\r\n        store.getState().participants[data.offer.userId].peerConnection;\r\n      await pc.setRemoteDescription(new RTCSessionDescription(data.offer));\r\n      await createAnswer(data.offer.userId, userId);\r\n    }\r\n  });\r\n\r\n  currentUserRef.child(\"offerCandidates\").on(\"child_added\", (snapshot) => {\r\n    const data = snapshot.val();\r\n    if (data.userId) {\r\n      const pc = store.getState().participants[data.userId].peerConnection;\r\n      pc.addIceCandidate(new RTCIceCandidate(data));\r\n    }\r\n  });\r\n\r\n  currentUserRef.child(\"answers\").on(\"child_added\", (snapshot) => {\r\n    const data = snapshot.val();\r\n    if (data?.answer) {\r\n      const pc =\r\n        store.getState().participants[data.answer.userId].peerConnection;\r\n      const answerDescription = new RTCSessionDescription(data.answer);\r\n      pc.setRemoteDescription(answerDescription);\r\n    }\r\n  });\r\n\r\n  currentUserRef.child(\"answerCandidates\").on(\"child_added\", (snapshot) => {\r\n    const data = snapshot.val();\r\n    if (data.userId) {\r\n      const pc = store.getState().participants[data.userId].peerConnection;\r\n      pc.addIceCandidate(new RTCIceCandidate(data));\r\n    }\r\n  });\r\n};\r\n\r\nconst createAnswer = async (otherUserId, userId) => {\r\n  const pc = store.getState().participants[otherUserId].peerConnection;\r\n  const participantRef1 = participantRef.child(otherUserId);\r\n  pc.onicecandidate = (event) => {\r\n    event.candidate &&\r\n      participantRef1\r\n        .child(\"answerCandidates\")\r\n        .push({ ...event.candidate.toJSON(), userId: userId });\r\n  };\r\n\r\n  const answerDescription = await pc.createAnswer();\r\n  await pc.setLocalDescription(answerDescription);\r\n\r\n  const answer = {\r\n    type: answerDescription.type,\r\n    sdp: answerDescription.sdp,\r\n    userId: userId,\r\n  };\r\n\r\n  await participantRef1.child(\"answers\").push().set({ answer });\r\n};\r\n","import {\r\n  SET_MAIN_STREAM,\r\n  ADD_PARTICIPANT,\r\n  SET_USER,\r\n  REMOVE_PARTICIPANT,\r\n  UPDATE_USER,\r\n  UPDATE_PARTICIPANT,\r\n} from \"./actiontypes\";\r\n\r\nimport {\r\n  createOffer,\r\n  initializeListensers,\r\n  updatePreference,\r\n} from \"../config/peerConnection\";\r\n\r\nlet defaultUserState = {\r\n  mainStream: null,\r\n  participants: {},\r\n  currentUser: null,\r\n};\r\n\r\nconst servers = {\r\n  iceServers: [\r\n    {\r\n      urls: [\r\n        \"stun:stun1.l.google.com:19302\",\r\n        \"stun:stun2.l.google.com:19302\",\r\n        \"stun:stun.l.google.com:19302\",\r\n        \"stun:stun3.l.google.com:19302\",\r\n        \"stun:stun4.l.google.com:19302\",\r\n        \"stun:stun.services.mozilla.com\",\r\n      ],\r\n    },\r\n  ],\r\n  iceCandidatePoolSize: 10,\r\n};\r\n\r\nconst generateColor = () =>\r\n  \"#\" + Math.floor(Math.random() * 16777215).toString(16);\r\n\r\nexport const userReducer = (state = defaultUserState, action) => {\r\n  if (action.type === SET_MAIN_STREAM) {\r\n    let payload = action.payload;\r\n    state = { ...state, ...payload };\r\n    return state;\r\n  } else if (action.type === ADD_PARTICIPANT) {\r\n    let payload = action.payload;\r\n    const currentUserId = Object.keys(state.currentUser)[0];\r\n    const newUserId = Object.keys(payload.newUser)[0];\r\n    if (state.mainStream && currentUserId !== newUserId) {\r\n      payload.newUser = addConnection(\r\n        payload.newUser,\r\n        state.currentUser,\r\n        state.mainStream\r\n      );\r\n    }\r\n\r\n    if (currentUserId === newUserId)\r\n      payload.newUser[newUserId].currentUser = true;\r\n    payload.newUser[newUserId].avatarColor = generateColor();\r\n    let participants = { ...state.participants, ...payload.newUser };\r\n    state = { ...state, participants };\r\n    return state;\r\n  } else if (action.type === SET_USER) {\r\n    let payload = action.payload;\r\n    let participants = { ...state.participants };\r\n    const userId = Object.keys(payload.currentUser)[0];\r\n    payload.currentUser[userId].avatarColor = generateColor();\r\n    initializeListensers(userId);\r\n    state = { ...state, currentUser: { ...payload.currentUser }, participants };\r\n    return state;\r\n  } else if (action.type === REMOVE_PARTICIPANT) {\r\n    let payload = action.payload;\r\n    let participants = { ...state.participants };\r\n    delete participants[payload.id];\r\n    state = { ...state, participants };\r\n    return state;\r\n  } else if (action.type === UPDATE_USER) {\r\n    let payload = action.payload;\r\n    const userId = Object.keys(state.currentUser)[0];\r\n    updatePreference(userId, payload.currentUser);\r\n    state.currentUser[userId] = {\r\n      ...state.currentUser[userId],\r\n      ...payload.currentUser,\r\n    };\r\n    state = {\r\n      ...state,\r\n      currentUser: { ...state.currentUser },\r\n    };\r\n    return state;\r\n  } else if (action.type === UPDATE_PARTICIPANT) {\r\n    let payload = action.payload;\r\n    const newUserId = Object.keys(payload.newUser)[0];\r\n\r\n    payload.newUser[newUserId] = {\r\n      ...state.participants[newUserId],\r\n      ...payload.newUser[newUserId],\r\n    };\r\n    let participants = { ...state.participants, ...payload.newUser };\r\n    state = { ...state, participants };\r\n    return state;\r\n  }\r\n  return state;\r\n};\r\n\r\nconst addConnection = (newUser, currentUser, stream) => {\r\n  const peerConnection = new RTCPeerConnection(servers);\r\n  stream.getTracks().forEach((track) => {\r\n    peerConnection.addTrack(track, stream);\r\n  });\r\n  const newUserId = Object.keys(newUser)[0];\r\n  const currentUserId = Object.keys(currentUser)[0];\r\n\r\n  const offerIds = [newUserId, currentUserId].sort((a, b) =>\r\n    a.localeCompare(b)\r\n  );\r\n\r\n  newUser[newUserId].peerConnection = peerConnection;\r\n  if (offerIds[0] !== currentUserId)\r\n    createOffer(peerConnection, offerIds[0], offerIds[1]);\r\n  return newUser;\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore } from \"redux\";\r\nimport { userReducer } from \"./store/reducer\";\r\n\r\nexport const store = createStore(userReducer);\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n\r\n\r\n"],"sourceRoot":""}